<codestructure version="5.14">
<phptree>
<treenode node="BaseMath;PHP:Class Name;D:\OSPanel\domains\samson\1.php;f0;137;1;156;;;;vpos;;v;;r&#10;Definition&#10;    class BaseMath&#10;&#10;Description&#10;     абстрактный класс BaseMath;;d0,138;;b0,0;;m">
<treenode node="exp1;PHP:Function Name;D:\OSPanel\domains\samson\1.php;f14;141;5;144;;;;vpos;;v;;r;;d4,142;;b2,0;;ma;;pb;;pc;;p">
</treenode>
<treenode node="exp2;PHP:Function Name;D:\OSPanel\domains\samson\1.php;f14;146;5;150;;;;vpos;;v;;r;;d4,147;;b2,0;;ma;;pb;;pc;;p">
</treenode>
<treenode node="getValue;PHP:Function Name;D:\OSPanel\domains\samson\1.php;f11;152;5;155;;;;vpos;;v;;r;;d4,153;;b1,0;;m">
</treenode>
</treenode>
<treenode node="F1;PHP:Class Name;D:\OSPanel\domains\samson\1.php;f0;158;1;165;;;;vpos;;vBaseMath;;c;;r;;d0,159;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;D:\OSPanel\domains\samson\1.php;f11;160;5;163;;;;vpos;;v;;r;;d4,161;;b1,0;;ma;;pb;;pc;;p">
</treenode>
</treenode>
<treenode node="convertString;PHP:Function Name;D:\OSPanel\domains\samson\NewFile.php;f0;11;1;17;;;;vpos;;v;;r&#10;Definition&#10;    convertString( string $a, string $b):string&#10;&#10;Description&#10;     функция преобразования строки если в строке $a содержится 2 и более подстроки $b, то во втором месте заменить подстроку $b на инвертированную подстроку решение &quot;в лоб&quot;;;d0,12;;b0,0;;ma;;pb;;p">
</treenode>
<treenode node="convertString2;PHP:Function Name;D:\OSPanel\domains\samson\NewFile.php;f0;24;1;42;;;;vpos;;v;;r&#10;Definition&#10;    convertString2( string $a, string $b, array $c )&#10;&#10;Description&#10;     функция преобразования строки массив $c содержит порядковые номера вхождения подстроки $b в строке $a которые необходимо заменить на инвертированную подстроку $b;;d0,25;;b0,0;;ma;;pb;;pc;;p">
</treenode>
<treenode node="createTrapeze;PHP:Function Name;D:\OSPanel\domains\samson\1.php;f0;33;1;41;;;;vpos;;v;;r&#10;Definition&#10;    createTrapeze( array $a, array $key = [ &apos;a&apos;, &apos;b&apos;, &apos;c&apos; ] ):array&#10;&#10;Description&#10;     функция создаёт многомерный массив с ассоциативными ключами из массива $a без использования стандартных функций;;d0,34;;b0,0;;ma;;pkey;;p">
</treenode>
<treenode node="createTrapeze2;PHP:Function Name;D:\OSPanel\domains\samson\1.php;f0;43;1;52;;;;vpos;;varray;;r;;d0,44;;b0,0;;ma;;pkey;;p">
</treenode>
<treenode node="findSimple;PHP:Function Name;D:\OSPanel\domains\samson\_new.php;f0;8;1;11;;D:\OSPanel\domains\samson\1.php;f0;8;1;27;;;;vpos;;v;;r&#10;Definition&#10;    findSimple( int $a, int $b ):array&#10;&#10;Description&#10;     функция создаёт массив простых чисел методом перебора делителя;;d0,9;;b0,0;;ma;;pb;;p">
</treenode>
<treenode node="getMin;PHP:Function Name;D:\OSPanel\domains\samson\1.php;f0;81;1;88;;;;vpos;;v;;r&#10;Definition&#10;    getMin( array $a ):int&#10;&#10;Description&#10;     функция выборки минимального числа из ассоциативного массива $a;;d0,82;;b0,0;;ma;;p">
</treenode>
<treenode node="getMin2;PHP:Function Name;D:\OSPanel\domains\samson\1.php;f0;90;1;94;;;;vpos;;vint;;r;;d0,91;;b0,0;;ma;;p">
</treenode>
<treenode node="getSizeForLimit;PHP:Function Name;D:\OSPanel\domains\samson\1.php;f0;69;1;76;;;;vpos;;v;;r&#10;Definition&#10;    getSizeForLimit( array $a, int $b ):array&#10;&#10;Description&#10;     функция извлечения массива из массива $a с максимальной площадью меньшей или равной $b;;d0,70;;b0,0;;ma;;pb;;p">
</treenode>
<treenode node="importXml;PHP:Function Name;D:\OSPanel\domains\samson\NewFile.php;f0;47;1;216;;;;vpos;;v;;r&#10;Definition&#10;    importXml( string $a)&#10;&#10;Description&#10;     функция импорта товаров XML -&gt; DB;;d0,48;;b0,0;;ma;;p">
</treenode>
<treenode node="printTrapeze;PHP:Function Name;D:\OSPanel\domains\samson\1.php;f0;100;1;131;;;;vpos;;v;;r&#10;Definition&#10;    printTrapeze( array $a )&#10;&#10;Description&#10;     отображение таблицы трапеции на основании массива $a;;d0,101;;b0,0;;ma;;p">
</treenode>
<treenode node="squareTrapeze;PHP:Function Name;D:\OSPanel\domains\samson\1.php;f0;57;1;64;;;;vpos;;v;;r&#10;Definition&#10;    squareTrapeze( array $a ):array&#10;&#10;Description&#10;     функция расчёта площади трапеции на основании данных многомерного массива $a;;d0,58;;b0,0;;ma;;p">
</treenode>
</phptree>
</codestructure>